import asyncio

from api_client_opti24 import *


async def main():
    client = APIClient(
        base_url=BASE_URL,   # —Ç–≤–æ–π URL API
        api_key=API_KEY,
        login=LOGIN,
        password=PASSWORD
    )

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    auth_response = await client.auth_user()
    print("+++–ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø+++")

    print(auth_response.data.contracts[1])

    # –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É
    limits = await client.get_region_limits(contract_id="1-2SY777F")
    print("–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤:", limits)
    # for rl in limits.result:
    #     print(rl.id, rl.country, rl.region, rl.limit_type)

    # # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç –Ω–∞ –∫–∞—Ä—Ç—É
    # await client.set_region_limit(
    #     region_limits=[
    #         {
    #             "card_id": "2725116",
    #             "contract_id": "1-1N3MWYG",
    #             "country": "RUS",
    #             "region": "04",
    #             "service_center": "2052059",
    #             "limit_type": 1,
    #         }
    #     ]
    # )
    #
    # # –£–¥–∞–ª–∏—Ç—å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç
    # await client.remove_region_limit(contract_id="1-B7C8D", regionlimit_id="6358201")


    # # –ü–æ–ª—É—á–µ–Ω–∏–µ –≥—Ä—É–ø–ø –∫–∞—Ä—Ç –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É
    # groups = await client.get_card_groups(contract_id="1-2SY777F")
    # for g in groups.result:
    #     print(g.id, g.name, g.cards_count)

    # # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã
    # new_group = await client.set_card_group(contract_id="1-2SY777F", name="groupcard-4")

    # # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç –≤ –≥—Ä—É–ø–ø—É
    # await client.set_cards_to_group(
    #     contract_id="1-1N5MWYG",
    #     group_id=new_group["data"]["id"],
    #     cards_list=[{"id": "2728111", "type": "Attach"}, {"id": "2728112", "type": "Attach"}],
    # )
    #
    # # –£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    # await client.remove_card_group(contract_id="1-1N5MWYG", group_id=new_group["data"]["id"])




    # --- v2 ---
    # # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
    # reports = await client.get_reports()
    # for r in reports.result:
    #     print(r.id, r.name)

    # # –ó–∞–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç (–ø–æ –¥–æ–≥–æ–≤–æ—Ä—É –Ω–∞ email)
    # order = await client.order_report(
    #     report_id="tsc_transaction_protocol",
    #     format="xlsx",
    #     emails=["test@yandex.ru"],
    #     params={"start_date": "2022-11-02", "end_date": "2022-12-01", "id_agreement": ["1-2SY777F"]},
    # )
    #
    # # –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
    # jobs = await client.get_report_jobs()
    # for j in jobs.result:
    #     print(j.job_id, j.report_name)
    # #
    # –∂–¥—ë–º 5 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞ –æ—Ç—á—ë—Ç–∞
    #await asyncio.sleep(300)

    # content = await client.download_report_file(job_id="1-2FLFKAW")
    #
    # with open("report.xlsx", "wb") as f:
    #     f.write(content)
    #
    # # –°–∫–∞—á–∏–≤–∞–µ–º –æ—Ç—á–µ—Ç (v1, –≤ zip)
    # content = await client.download_report_file_v1(job_id="1-24H0D3I", archive=True)
    # with open("report.zip", "wb") as f:
    #     f.write(content)
    #
    #
    # # --- v1 (—É—Å—Ç–∞—Ä–µ–≤—à–∏–µ) ---
    # await client.order_report_v1(
    #     contract_id="1-13WR9S2",
    #     start="2017-01-01",
    #     end="2017-01-31",
    #     report_format="xlsx",
    #     email="mail@mail.ru",
    # )
    #
    # jobs_v1 = await client.get_report_job_list_v1()
    # print(jobs_v1)

    # # —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
    # await client.list(role="Driver", status="Active")

    # # —Å–æ–∑–¥–∞—Ç—å —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    # await client.create({
    #     "role": "Driver",
    #     "mobile": "7999999999",
    #     "contracts": [{"id": "1-FFFFF", "template_id": "1-FKFKF"}]
    # })
    #
    # —Å–æ–∑–¥–∞—Ç—å –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ (—Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∞)
    # await client.create({
    #     "role": "Driver",
    #     "email": "test@test.yy",
    #     "cards": ["5554324", "4224443"]
    # }, with_send=False)
    # #
    # # —É–¥–∞–ª–∏—Ç—å
    # await client.delete("5ddc1bd27f6e1101316dace6")
    #
    # # –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
    # await client.resend("5ddc1bd27f6e1101316dace6")
    #
    # # –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏
    # await client.prolong("5e6fe829-ec61-4a18-8c4e-76df122979a5", with_send=False)


    # # üìå –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    # users = await client.get_users(
    #     sort="id,login",
    #     page=1,
    #     on_page=5,
    #     q="–ö–∏—Ä–∏–ª–ª",
    #     filter={"role": "Driver", "active": True}
    # )
    # print("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", users)
    #
    # # üìå –°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª—è –±–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    # new_user_id = await client.create_user(
    #     uuid="62f2e267-4398-4ea2-b02e-6e88b81b0958",
    #     mobile="7999999999"
    # )
    # print("–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", new_user_id)
    #
    # # üìå –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    # await client.attach_contracts(
    #     user_id=new_user_id,
    #     contracts=[
    #         {"sid": "1-380B94P", "template_id": "1-3BE470B", "use_mpc": True},
    #         {"sid": "1-37PYW2D", "template_id": None},
    #     ]
    # )
    # print("–î–æ–≥–æ–≤–æ—Ä—ã –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã")
    #
    # # üìå –û—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # await client.detach_contracts(
    #     user_id=new_user_id,
    #     contract_ids=["1-380B94P", "1-37PYW2D"]
    # )
    # print("–î–æ–≥–æ–≤–æ—Ä—ã –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω—ã")
    #
    # # üìå –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    # await client.attach_card(user_id=new_user_id, card_id="5050505")
    # print("–ö–∞—Ä—Ç–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞")
    #
    # # üìå –û—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # await client.detach_card(user_id=new_user_id, card_id="5050505")
    # print("–ö–∞—Ä—Ç–∞ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∞")
    #
    # # üìå –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # await client.delete_user(user_id=new_user_id)
    # print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω")
    #
    # # üìå –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    # await client.logoff()
    # print("–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


    # # ---------- –®–∞–±–ª–æ–Ω—ã ----------
    # templates = await client.get_templates(contract_id="1-380B94P")
    # print("–®–∞–±–ª–æ–Ω—ã:", templates)
    #
    # new_template = await client.create_template("1-2SY777F", "Wallet", "Demo Template")
    # print("–°–æ–∑–¥–∞–Ω:", new_template)
    #
    # updated_template = await client.update_template(new_template.id, "1-2SY777F", "Limit", "Updated Demo")
    # print("–û–±–Ω–æ–≤–ª—ë–Ω:", updated_template)
    #
    # # ---------- –õ–∏–º–∏—Ç—ã ----------
    # limits = await client.get_template_limits(new_template.id)
    # print("–õ–∏–º–∏—Ç—ã:", limits)
    #
    # new_limit = await client.create_template_limit(new_template.id, {
    #     "contract_id": "1-2SY777F",
    #     "amount": {"unit": "LIT", "value": 100},
    #     "time": {"type": 3, "number": 1}
    # })
    # print("–°–æ–∑–¥–∞–Ω –ª–∏–º–∏—Ç:", new_limit)
    #
    # #---------- –û–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª–∏ ----------
    # restrictions = await client.get_template_restrictions(new_template.id)
    # print("–û–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª–∏:", restrictions)
    #
    # new_restriction = await client.create_template_restriction(new_template.id, {
    #     "contract_id": "1-2SY777F",
    #     "product_type": "1-276PF01",
    #     "restriction_type": 1
    # })
    # print("–°–æ–∑–¥–∞–Ω –æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å:", new_restriction)
    #
    # # ---------- –ì–µ–æ–æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª–∏ ----------
    # geos = await client.get_template_georestrictions(new_template.id)
    # print("–ì–µ–æ–æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª–∏:", geos)
    #
    # new_geo = await client.create_template_georestriction(new_template.id, {
    #     "contract_id": "1-2SY777F",
    #     "country": "RUS",
    #     "region": "45",
    #     "restriction_type": 1
    # })
    # print("–°–æ–∑–¥–∞–Ω –≥–µ–æ–æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å:", new_geo)
    #
    # #---------- –£–¥–∞–ª–µ–Ω–∏–µ ----------
    # await client.delete_template_georestriction(new_template.id, new_geo.id)
    # await client.delete_template_restriction(new_template.id, new_restriction.id)
    # await client.delete_template_limit(new_template.id, new_limit.id)
    # await client.delete_template(new_template.id)
    # print("–í—Å–µ —Å—É—â–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω—ã")

    # # 1. –í—ã–ø—É—Å–∫ –í–ö –ø–æ user_id (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥)
    # card = await client.create_virtual_card(user_id="1-2Q468ZB")
    # print("–°–æ–∑–¥–∞–Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞:", card.data)
    #
    # # 2. –í—ã–ø—É—Å–∫ –í–ö —Å —Ç–∏–ø–æ–º –∫–∞—Ä—Ç—ã (–Ω–æ–≤—ã–π –º–µ—Ç–æ–¥)
    # card2 = await client.release_virtual_card(type_="wallet")
    # print("–í—ã–ø—É—â–µ–Ω–∞ –í–ö:", card2.data)
    #
    # # 3. –í—ã–ø—É—Å–∫ –í–ö —Å —à–∞–±–ª–æ–Ω–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    # card3 = await client.release_virtual_card(template_id="1-3BDZMRJ", user_id="1-2Q468ZB")
    # print("–í–ö –ø–æ —à–∞–±–ª–æ–Ω—É:", card3.data)
    #
    # # 4. –£–¥–∞–ª–µ–Ω–∏–µ –ú–ü–ö
    # result = await client.delete_mpc(card_id=card.data.id)
    # print("–£–¥–∞–ª–µ–Ω–∏–µ –ú–ü–ö:", result)
    #
    # # 5. –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–æ–≤ –ú–ü–ö
    # reset_result = await client.reset_mpc(card_id=card.data.id, type_="ResetCounterCode")
    # print("–°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–æ–≤:", reset_result)
    # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω –Ω–∞ —Ç–æ–≤–∞—Ä—ã
    # prices = await client.calculate_prices(
    #     card_id="989666",
    #     poi_id="366038",
    #     goods=["00000000000007", "00000000000009"]
    # )
    # print("–§–∏–Ω–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã:")
    # for item in prices.data.goods:
    #     print(f"- {item.code}: {item.price} —Ä—É–±.")
    #
    # # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–∫—É–ø–∫–∏
    # can_buy = await client.check_purchase(
    #     card_id="989666",
    #     poi_id="366038",
    #     goods=[
    #         {"code": "00000000000007", "quantity": 1, "price": 1.5},
    #         {"code": "00000000000009", "quantity": 1, "price": 1.5},
    #     ]
    # )
    # print("–ú–æ–∂–Ω–æ –ª–∏ —Å–æ–≤–µ—Ä—à–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é:", can_buy.data)

    # # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ê–ó–°
    # azs = await client.get_azs(filter={"countries": ["RUS"]}, page=1, on_page=5)
    # print(f"–ù–∞–π–¥–µ–Ω–æ –ê–ó–°: {azs.total_count}")
    # for station in azs.result:
    #     print(f"- {station.id}: {station.name} ({station.address})")
    #
    # # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –ê–ó–°
    # filters = await client.get_azs_filters()
    # print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ê–ó–°:", filters.filters.keys())
    #
    # # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
    # dictionary = await client.get_dictionary("Unit")
    # print(f"–≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ: {dictionary.total_count}")
    # for item in dictionary.result:
    #     print(f"- {item.id}: {item.value}")

if __name__ == "__main__":
    asyncio.run(main())
